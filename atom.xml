<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://day.ttti.cc</id>
    <title>极限博客</title>
    <updated>2021-03-12T13:00:58.992Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://day.ttti.cc"/>
    <link rel="self" href="https://day.ttti.cc/atom.xml"/>
    <subtitle>极限玩家的博客</subtitle>
    <logo>https://day.ttti.cc/images/avatar.png</logo>
    <icon>https://day.ttti.cc/favicon.ico</icon>
    <rights>All rights reserved 2021, 极限博客</rights>
    <entry>
        <title type="html"><![CDATA[图片防盗链解决方案]]></title>
        <id>https://day.ttti.cc/post/tu-pian-fang-dao-lian-jie-jue-fang-an/</id>
        <link href="https://day.ttti.cc/post/tu-pian-fang-dao-lian-jie-jue-fang-an/">
        </link>
        <updated>2021-03-12T12:57:58.000Z</updated>
        <summary type="html"><![CDATA[<p>很多时候，图片镜像缓存服务有不错的用途：</p>
]]></summary>
        <content type="html"><![CDATA[<p>很多时候，图片镜像缓存服务有不错的用途：</p>
<!-- more -->
<ul>
<li>将有防盗链的图片引用到网页，使其能显示出来</li>
<li>将 http 图片引用到 https 页面，以绕过证书验证</li>
<li>加载无法显示的图片（X号的图）</li>
<li>加快显示，加载较慢的图片</li>
</ul>
<p>图片镜像缓存服务：</p>
<pre><code>https://search.pstatic.net/common?src=
https://imageproxy.pimg.tw/resize?url=
https://images.weserv.nl/?url=
https://pic1.xuehuaimg.com/proxy/
</code></pre>
<p>部分服务链接头可以不添加 <code>http(s)://</code> 协议:</p>
<pre><code>https://imageproxy.pimg.tw/resize?url=https://i.imgur.com/hWghm6oh.jpg
https://images.weserv.nl/?url=i.imgur.com/hWghm6oh.jpg
https://pic1.xuehuaimg.com/proxy/i.imgur.com/hWghm6oh.jpg
</code></pre>
<p>首推 <a href="http://images.weserv.nl">images.weserv.nl</a> ，不仅可以作为图像缓存，还有多种参数可选，例如修改图片尺寸，旋转图片等。</p>
<p>防盗链图片演示：</p>
<pre><code>http://pic1.zhimg.com/v2-8b657dff159debf1cff463d61b7dcafd_r.jpg
</code></pre>
<p>该图片是知乎的图片，存在防盗链，在图片外链前面加上图片镜像服务后就可以正常显示了。</p>
<pre><code>https://i.imgur.com/hWghm6oh.jpg
</code></pre>
<p>这是知名图床 imgur 上的图片，其不限制上传的图片类型，所以国内无法打开，但在外链前加上图片镜像服务后即可正常显示。</p>
<p><a href="https://hao.su/pic.html">免费图床推荐</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Youtube 详细统计信息测速指南]]></title>
        <id>https://day.ttti.cc/post/youtube-xiang-xi-tong-ji-xin-xi-ce-su-zhi-nan/</id>
        <link href="https://day.ttti.cc/post/youtube-xiang-xi-tong-ji-xin-xi-ce-su-zhi-nan/">
        </link>
        <updated>2021-03-04T06:23:46.000Z</updated>
        <summary type="html"><![CDATA[<p>对于出海上网来说，无论是自架梯子还是购买机场，都需要测试网速，虽然可以使用 Speedtest 这样的标准测速网站，但实际不如直接观看 YouTube 视频“详细统计信息”来的实用高效。</p>
]]></summary>
        <content type="html"><![CDATA[<p>对于出海上网来说，无论是自架梯子还是购买机场，都需要测试网速，虽然可以使用 Speedtest 这样的标准测速网站，但实际不如直接观看 YouTube 视频“详细统计信息”来的实用高效。</p>
<!-- more -->
<p>因为，需求上来说，只要能满足视频流的播放，其他的也都满足了，在观看 YouTube 时，随时都可以<strong>右键视频 - 详细统计信息，查看“Connection Speed”项来确认当前速度。</strong></p>
<p>公式：<strong>Connection Speed÷(1024*8)=实际速度 MB/s</strong>，当然，实际上不用去计算它，一般来说 15000-30000 的速度即可用方向键连续快进的观看1080P的视频了。</p>
<p><strong>Video ID / sCPNY：</strong> 每个视频都有的唯一 ID 号码<br>
<strong>Viewport / Frames：</strong> 当前播放视窗的大小 / 丢帧数据<br>
<strong>Current / Optimal Res：</strong> 当前视频 / 推荐分辨率大小<br>
<strong>Volume / Normalized：</strong> 当前播放音量大小 / 标准音量的差异值<br>
<strong>Codecs：</strong> 视频采用的编码器<br>
<strong>Connection Speed：</strong> 当前客户端到服务器的实时链接速率（1024*8）<br>
<strong>Network Activity：</strong> 实时的网络活动<br>
<strong>Buffer Health：</strong> 缓冲时间（断网后视频可以继续播放的时间）<br>
<strong>Mystery Text：</strong> 神秘代码<br>
S：播放状态（4暂停、8播放、19快进或快退、14加载视频中 ...）<br>
T：视频的时间轨道线<br>
B：缓冲区间和缓冲区大小（缓冲区的第二数字 - T（时间轨道线）= 缓冲的时间）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[youtube-dl 下载视频使用指南]]></title>
        <id>https://day.ttti.cc/post/youtube-dl-xia-zai-shi-pin-shi-yong-zhi-nan/</id>
        <link href="https://day.ttti.cc/post/youtube-dl-xia-zai-shi-pin-shi-yong-zhi-nan/">
        </link>
        <updated>2020-08-07T11:27:40.000Z</updated>
        <summary type="html"><![CDATA[<p>youtube-dl 需要安装 Python 环境，并需配置好系统变量（安装时勾选 Add Python to PATH）</p>
]]></summary>
        <content type="html"><![CDATA[<p>youtube-dl 需要安装 Python 环境，并需配置好系统变量（安装时勾选 Add Python to PATH）</p>
<!-- more -->
<h3 id="安装-youtube-dl">安装 youtube-dl</h3>
<p>从<a href="https://yt-dl.org">官网</a>下载 youtube-dl.exe，然后放到任意目录下即可使用，同时视频默认会下载到它的同目录。</p>
<p>一个视频文件，包含视频和音频两样，不同质量的可以有多种组合。</p>
<blockquote>
<p>假设要下载：https://www.youtube.com/watch?v=xxxxxxxx</p>
</blockquote>
<h3 id="下载最优视频默认">下载最优视频（默认）</h3>
<pre><code>youtube-dl https://www.youtube.com/watch?v=xxxxxxxx
</code></pre>
<p>不带任何参数，则默认下载画质、音质最好的视频。</p>
<h3 id="查看可选的视-音频格式">查看可选的视、音频格式</h3>
<pre><code>youtube-dl -F https://www.youtube.com/watch?v=xxxxxxxx

</code></pre>
<p>呈现信息</p>
<pre><code>249          webm       audio only tiny   53k , opus @ 50k (48000Hz), 1.09MiB
251          webm       audio only tiny  127k , opus @160k (48000Hz), 2.48MiB
140          m4a        audio only tiny  130k , m4a_dash container, mp4a.40.2@128k (44100Hz), 2.99MiB
278          webm       256x144    144p   97k , webm container, vp9, 30fps, video only, 2.17MiB
160          mp4        256x144    144p  110k , avc1.4d400c, 30fps, video only, 1.58MiB
133          mp4        426x240    240p  205k , avc1.4d4015, 30fps, video only, 2.56MiB
243          webm       640x360    360p  409k , vp9, 30fps, video only, 5.54MiB
134          mp4        640x360    360p  427k , avc1.4d401e, 30fps, video only, 4.69MiB
244          webm       854x480    480p  757k , vp9, 30fps, video only, 8.39MiB
136          mp4        1280x720   720p 1142k , avc1.4d401f, 30fps, video only, 12.33MiB
247          webm       1280x720   720p 1417k , vp9, 30fps, video only, 14.22MiB
18           mp4        640x360    360p  529k , avc1.42001E, mp4a.40.2@ 96k (44100Hz), 12.22MiB (best)
</code></pre>
<h3 id="自行组合方案">自行组合方案</h3>
<p>从返回的列出的信息中，挑选你想要视频，以及音频组合方案，填写对应序号即可，例如：</p>
<pre><code>youtube-dl -f 136+140 https://www.youtube.com/watch?v=xxxxxxxx
youtube-dl -f 136 https://www.youtube.com/watch?v=xxxxxxxx

</code></pre>
<h2 id="命令格式">命令格式</h2>
<ul>
<li>youtube-dl [url]（直接下载，最优视频）</li>
<li>youtube-dl -F [url]（列出所有音频和视频）</li>
<li>youtube-dl [playlist_url]（下载视频列表）</li>
</ul>
<h2 id="字幕相关">字幕相关</h2>
<p>以下命令能够实现，将视频带有的字幕一起下载下来</p>
<pre><code>youtube-dl --write-sub --sub-format &quot;ass/srt/best&quot; --convert-subs &quot;srt&quot; &quot;video_url&quot;

</code></pre>
<p><code>—write-sub</code>：写入字幕，即把字幕下载。<br>
<code>--sub-format</code>：指定字幕格式，按顺序选，不存在则选下一个。<br>
<code>--convert-subs</code>： 转换字幕，格式有限制，通用为 srt ；若不转，某些字幕可能是 .vtt 的；如果有 ass 字幕可下载，则无须加此项。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微软文件恢复工具：Windows File Recovery]]></title>
        <id>https://day.ttti.cc/post/wei-ruan-wen-jian-hui-fu-gong-ju-windows-file-recovery/</id>
        <link href="https://day.ttti.cc/post/wei-ruan-wen-jian-hui-fu-gong-ju-windows-file-recovery/">
        </link>
        <updated>2020-06-30T11:23:49.000Z</updated>
        <summary type="html"><![CDATA[<p>微软推出了免费的文件恢复工具：Windows File Recovery。你可以在 Microsoft Store 中下载（即 Win10 商店中下载）。</p>
]]></summary>
        <content type="html"><![CDATA[<p>微软推出了免费的文件恢复工具：Windows File Recovery。你可以在 Microsoft Store 中下载（即 Win10 商店中下载）。</p>
<!-- more -->
<p>同时，<strong>该工具仅支持 Win10 version 19041.0 及以上版本</strong>，也就是你要升级到最新版本 Win10 2004，才能使用它！</p>
<p>我们删除文件时，实际上只是将其在硬盘上标记为“可写入新数据”而已，这时，如果此时没有新的数据写入覆盖该区域的硬盘块，那么就可以轻松的将其恢复。</p>
<h2 id="命令格式">命令格式</h2>
<p>结构上来说比较简单，命令格式为：</p>
<pre><code>winfr source-drive: destination-drive: [/switches] 
</code></pre>
<p><strong>解释：</strong></p>
<ul>
<li>winfr（调用该工具的起始命令）</li>
<li>source-drive（源驱动器）</li>
<li>destination-drive（目标驱动器）</li>
<li>/switches（调用的参数）</li>
</ul>
<p>注意：我们指定的恢复到磁盘，目标的位置和原删除文件所在的磁盘不能是同一个。比如我们恢复C盘删除的文件不能选择恢复到C盘，可以选择恢复到D盘E盘，然后再移动到你要移动的位置即可。</p>
<figure data-type="image" tabindex="1"><img src="https://ae04.alicdn.com/kf/H63b15640b7e045249ea4a17814e0c781Q.png" alt="" loading="lazy"></figure>
<h2 id="实际操作">实际操作</h2>
<p>现在，我们来给 C 盘中刚刚删除的几个 mp3 文件恢复一下，将其恢复到 D 盘，输入命令：</p>
<pre><code>winfr C: D: /r /n *.mp3
</code></pre>
<p>备注：<code>/r</code> 指定了分段模式  <code>/n</code> 指定了文件过滤器，即指定恢复了 mp3 文件</p>
<h3 id="更多示例">更多示例：</h3>
<p>恢复 C 盘里某个具体的文件恢复到 E 盘：</p>
<pre><code>winfr C: E: /n \Users\&lt;username&gt;\Documents\xxx.docx
</code></pre>
<p>恢复 C 盘某个具体图片至 E 盘：</p>
<pre><code>winfr C: E: /n \Users\&lt;username&gt;\Pictures\.JPEG /n \Users\&lt;username&gt;\Pictures\.PNG
</code></pre>
<p>恢复 C 盘的文档文件夹至 E 盘：</p>
<pre><code>winfr C: E: /n \Users\&lt;username&gt;\Documents\
</code></pre>
<p><strong>段模式下的使用语法（/r）：</strong></p>
<p>恢复 C 盘下已删除的 PDF 和 Word 文档至 E 盘：</p>
<pre><code>winfr C: E: /r /n *.pdf /n *.docx
</code></pre>
<p>恢复 C 盘下包含 “invoice”文件名的文件至 E 盘：</p>
<pre><code>winfr C: E: /r /n *invoice*
</code></pre>
<p><strong>签名模式下的使用语法（/x）：</strong></p>
<p>建议使用前请使用以下命令查看支持的扩展格式以及文件类型：</p>
<pre><code>winfr /#
</code></pre>
<p>恢复 JPEG 和 PNG 文件至 E 盘：</p>
<pre><code>winfr C: E: /x /y:JPEG,PNG
</code></pre>
<p>恢复 ZIP 文件至 E 盘：</p>
<pre><code>winfr C: E:\RecoveryTest /x /y:ZIP
</code></pre>
<h2 id="windows-file-recovery-的文件恢复模式">Windows File Recovery 的文件恢复模式</h2>
<p>默认：如果你的硬盘是 NTFS，用这个即可</p>
<p>签名：如果你的硬盘是 FAT 又或 FAT 和 exFAT 的U盘，就选这个</p>
<p>分段：如果要恢复比较久的文件，选这个</p>
<p><em>注：如果发现文件误删，应该立刻恢复，这样成功率是最高的，如果被覆写了，则难以恢复！</em></p>
<p>微软推出的自家的恢复文件工具目前是命令行工具，不知道日后会不会推出图形化工具，不过我个人认为，命令行也不错，只是对小白不太友好。最后附上官方帮助文档：</p>
<blockquote>
<p><a href="https://support.microsoft.com/zh-cn/help/4538642/windows-10-restore-lost-files">https://support.microsoft.com/zh-cn/help/4538642/windows-10-restore-lost-files</a></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JSDelivr CDN 加速 GitHub]]></title>
        <id>https://day.ttti.cc/post/jsdelivr-cdn-jia-su-github/</id>
        <link href="https://day.ttti.cc/post/jsdelivr-cdn-jia-su-github/">
        </link>
        <updated>2020-06-19T08:49:13.000Z</updated>
        <summary type="html"><![CDATA[<p>jsDelivr 提供了 Web 上常用静态资源的服务，不但有全球 CDN 加速，也采用了国内的 CDN 进行加速（有备案）</p>
]]></summary>
        <content type="html"><![CDATA[<p>jsDelivr 提供了 Web 上常用静态资源的服务，不但有全球 CDN 加速，也采用了国内的 CDN 进行加速（有备案）</p>
<!-- more -->
<p>jsDelivr 确保每个地区的使用者都能获得最好的连接速度，它还可以可将不同的 JavaScript 或 CSS 集合在一起使用。</p>
<p><a href="https://www.jsdelivr.com">官方网站</a> | 加速地址：https://cdn.jsdelivr.net</p>
<h3 id="github-使用镜像加速服务">GitHub 使用镜像加速服务</h3>
<p>很简单，比如，将仓库中的 DPlayer.min.js 文件利用 jsDelivr 加速，以下示例：</p>
<p><strong>原始链接：</strong><br>
<code>https://github.com/sunpma/goIndex/tree/master/js/DPlayer.min.js</code></p>
<p><strong>jsDelivr 加速链接：</strong><br>
<code>https://cdn.jsdelivr.net/gh/sunpma/goIndex/js/DPlayer.min.js</code></p>
<h3 id="如果按版本分类releases-一个-v10-版本">如果按版本分类，Releases 一个 v1.0 版本，</h3>
<p><strong>原始链接：</strong><br>
<code>https://github.com/sunpma/goIndex/blob/v1.0/js/DPlayer.min.js</code></p>
<p><strong>jsDelivr 加速链接：</strong><br>
<code>https://cdn.jsdelivr.net/gh/sunpma/goIndex@v1.0/js/DPlayer.min.js</code></p>
<p>如果要直接加载最新版本，可以使用 latest 标签：<br>
<code>https://cdn.jsdelivr.net/gh/sunpma/goIndex@latest/js/DPlayer.min.js</code></p>
<p><strong>加载镜像连接的规则：</strong></p>
<ul>
<li>GitHub 镜像，为 gh</li>
<li>WordPress 镜像，为 wp</li>
<li>npm 镜像，为 npm</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows Terminal Preview 1.1 更新内容]]></title>
        <id>https://day.ttti.cc/post/windows-terminal-preview-11-geng-xin-nei-rong/</id>
        <link href="https://day.ttti.cc/post/windows-terminal-preview-11-geng-xin-nei-rong/">
        </link>
        <updated>2020-06-19T05:46:20.000Z</updated>
        <summary type="html"><![CDATA[<p>微软宣布推出 Windows Terminal Preview 1.1 版本，该版本的最新功能将于 2020 年 7 月移至 Windows Terminal。下面来看看都有哪些新功能：</p>
]]></summary>
        <content type="html"><![CDATA[<p>微软宣布推出 Windows Terminal Preview 1.1 版本，该版本的最新功能将于 2020 年 7 月移至 Windows Terminal。下面来看看都有哪些新功能：</p>
<!-- more -->
<h3 id="在-windows-terminal-中打开">在 Windows Terminal 中打开</h3>
<p>现在，可以右键单击文件资源管理器中的文件夹，然后选择“在 Windows Terminal 中打开”。这将使用默认配置文件启动 Windows Terminal。</p>
<h3 id="开机时启动-windows-terminal">开机时启动 Windows Terminal</h3>
<p>此版本添加了一个新设置，能够将 Windows Terminal 设置为在启动计算机时启动。你可以在全局设置中将 startOnUserLogin 设置为 true 以启用此功能。</p>
<p>&quot;startOnUserLogin&quot;: true</p>
<h3 id="字体粗细支持">字体粗细支持</h3>
<p>Windows Terminal Preview 现在支持将字体粗细作为新的配置文件设置。fontWeight 设置接受各种描述字体粗细的字符串，以及相应的字体粗细数字表示形式。</p>
<p>&quot;fontWeight&quot;: &quot;normal&quot;</p>
<h3 id="alt-单击-以打开窗格">Alt +单击 以打开窗格</h3>
<p>如果你想从下拉菜单中打开配置文件作为当前窗口的窗格，可以在按住 Alt 的同时单击它。这将通过使用自动拆分功能在窗格中打开该配置文件，该功能会将活动窗口或窗格拆分为最长的长度。</p>
<h3 id="tab-更新颜色选择器">Tab 更新颜色选择器</h3>
<p>现在，可以通过右键单击选项卡并选择“颜色...”来进行着色。这将打开选项卡颜色菜单，你可以在其中选择预定义的颜色，或展开菜单以使用颜色选择器、十六进制代码或 RGB 字段选择任何颜色。每个选项卡的颜色将在该终端会话中保持不变。</p>
<h3 id="重命名">重命名</h3>
<p>选项卡重命名选项与颜色选择器在同样的上下文菜单中。单击此选项可重命名选项卡。</p>
<p>更紧凑的选项卡尺寸</p>
<p>新版本在 tabWidthMode 全局设置中添加了紧凑的选项卡大小，这能够将每个不活动的选项卡缩小到图标的宽度，从而为活动的选项卡留出更多空间来显示其完整标题。</p>
<p>&quot;tabWidthMode&quot;: &quot;compact&quot;</p>
<h3 id="新的命令行参数">新的命令行参数</h3>
<p>此版本添加了一些命令参数。第一个是 --maximized, -M，它将以最大化的方式启动 Windows Terminal。第二个是 --fullscreen, -F，它将 Windows Terminal 作为全屏启动。这两个命令不能合并。</p>
<p>最后一个是 --title，它使你可以在启动 Windows Terminal 之前自定义选项卡的标题。就像 tabTitle 配置文件设置一样。</p>
<p>用键盘打开 defaults.json</p>
<p>如果你想使用键盘打开 defaults.json 文件，新版本添加了一个新的默认键绑定&quot;ctrl+alt+,&quot;。openSettings命令已收到新操作，使用户可以分别使用 &quot;settingsFile&quot;、&quot;defaultsFile&quot; 或 &quot;allFiles&quot; 打开 settings.json 文件、defaults.json 文件或两者。</p>
<pre><code>{ &quot;command&quot;: { &quot;action&quot;: &quot;openSettings&quot;, &quot;target&quot;: &quot;defaultsFile&quot; }, &quot;keys&quot;: &quot;ctrl+alt+,&quot; }

文章来源：开源中国   作者：xplanet
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[读-写-问]]></title>
        <id>https://day.ttti.cc/post/search-read-ask/</id>
        <link href="https://day.ttti.cc/post/search-read-ask/">
        </link>
        <updated>2020-06-10T10:25:57.000Z</updated>
        <summary type="html"><![CDATA[<p>很多问题的解决都可以通过三连：<strong>Search - Read - Ask</strong> ，这套连招很管用，然而大部分人都<strong>不习惯搜索、没耐心阅读、不会提问</strong>。</p>
]]></summary>
        <content type="html"><![CDATA[<p>很多问题的解决都可以通过三连：<strong>Search - Read - Ask</strong> ，这套连招很管用，然而大部分人都<strong>不习惯搜索、没耐心阅读、不会提问</strong>。</p>
<!-- more -->
<p>检索在今天已经非常重要了，当你要提问题时，都应该先尝试检索问题，不能使用好检索，你就不能相对精确的定位问题，还会造成时间上的浪费（海里信息的关键就是检索）。</p>
<p>还有一个重要的是搜索引擎的算法，比如有些时候，使用百度可能获得信息比较旧，而谷歌对中文环境可能逐渐放弃（搜索引擎是非常重要的，它是互联网中绝不能缺少的）。</p>
<p>一般来说几乎所有问题都能通过“搜索和阅读”来解决，但不同的人需要的时间不一样（主要受制于逻辑和习惯），而同时你可能会碰到更多问题，解决不了时才使用 Ask（询问）。</p>
<p>当我们探索一个未知领域的时候，应该在过程中同时编写文档，这会直接让你内化，而不是“照猫画虎”，同时会留存一份回顾文档，毕竟昨天的知识你可能带不到明天。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[动图演示从官方下载并制作Win10启动U盘]]></title>
        <id>https://day.ttti.cc/post/win10-setup/</id>
        <link href="https://day.ttti.cc/post/win10-setup/">
        </link>
        <updated>2020-05-28T02:21:50.000Z</updated>
        <summary type="html"><![CDATA[<p>微软今天发布 Win10 2004 正式版了，然而还是很多小白依赖第三方下载，事实上微软官方是提供镜像下载的，同时还具备U盘制作功能，就是说，根本不需要依赖第三方网站。</p>
]]></summary>
        <content type="html"><![CDATA[<p>微软今天发布 Win10 2004 正式版了，然而还是很多小白依赖第三方下载，事实上微软官方是提供镜像下载的，同时还具备U盘制作功能，就是说，根本不需要依赖第三方网站。</p>
<!-- more -->
<p>为了帮助新人能更直观的了解，所以特意制作了动图。了解之后，你会发现原来制作一个Win10原版系统竟是如此简单的事情。</p>
<p>前置准备：U盘一个，8G以及以上，同时注意U盘里面的内容会清空（我个人是会用一个单独8G专门用来做启动盘，U盘都是白菜价格，U盘2.0就够）</p>
<p>第一步：访问<a href="https://www.microsoft.com/zh-cn/software-download/windows10">微软官方下载</a>，然后点击“立即下载工具”，随后就会弹出保存页面，这里保存到桌面即可（它只是个向导工具，只有18M）</p>
<figure data-type="image" tabindex="1"><img src="https://imgkr.cn-bj.ufileos.com/9fc181c7-bd85-4565-86d1-c613266068ce.gif" alt="下载并安装" loading="lazy"></figure>
<p>第二步：双击我们刚刚保存到桌面的 MediaCreationTool2004.exe ，然后根据想到完成即可，你可以看到如下的动图演示。</p>
<figure data-type="image" tabindex="2"><img src="https://imgkr.cn-bj.ufileos.com/4006be09-7b6a-48f0-a770-0744ef441730.gif" alt="向导制作U盘" loading="lazy"></figure>
<p>当向导完成后，U盘也制作好了，之后你就可以使用这个U盘进行全新安装 Win10 系统。是的就是如此简单，并没有那么繁琐。</p>
<p>使用动图演示，往往更简练说明问题，如今很多科普文章喜欢长文啰嗦。我更相信李小龙说的：“文明的进度总是向着简单方向运行”，就是说应该把科普的内容做的简单，毕竟我们都没有耐心看长文不是吗？</p>
]]></content>
    </entry>
</feed>